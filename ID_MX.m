% MRobot ID solver(逆动力学求解器：q, dq, ddq, model ――> TAU)
function TAU = ID_MX(i, Q_ref_r, dQ_ref_r, ddQ_ref_r, model)

q1 = Q_ref_r(i, 1);  q2 = Q_ref_r(i, 2);  q3 = Q_ref_r(i, 3);
dq1 = dQ_ref_r(i, 1); dq2 = dQ_ref_r(i, 2); dq3 = dQ_ref_r(i, 3);
ddq1 = ddQ_ref_r(i, 1); ddq2 = ddQ_ref_r(i, 2); ddq3 = ddQ_ref_r(i, 3);

ddQ = [ddq1; ddq2; ddq3];

L1 = model.L1;   L2 = model.L2;    L3 = model.L3;
M1 = model.M1;   M2 = model.M2;    M3 = model.M3;
g = model.g;
I1_1 = model.I1(1, 1); I1_2 = model.I1(2, 2); I1_3 = model.I1(3, 3); 
I2_1 = model.I2(1, 1); I2_2 = model.I2(2, 2); I2_3 = model.I2(3, 3); 
I3_1 = model.I3(1, 1); I3_2 = model.I3(2, 2); I3_3 = model.I3(3, 3);

M = [ I1_3 + I2_1 + I3_1 + (L2^2*M2)/4 + L2^2*M3 + (L3^2*M3)/4 - I2_1*cos(q2)^2 + I2_3*cos(q2)^2 - I3_1*cos(q2)^2 + I3_2*cos(q2)^2 - I3_2*cos(q2)^2*cos(q3)^2 + I3_3*cos(q2)^2*cos(q3)^2 - (L2^2*M2*cos(q2)^2)/4 - L2^2*M3*cos(q2)^2 - (L3^2*M3*cos(q2)^2)/4 + L2*L3*M3*sin(q3) + (L3^2*M3*cos(q2)^2*cos(q3)^2)/4 - L2*L3*M3*cos(q2)^2*sin(q3), I3_2*cos(q2)*cos(q3)*sin(q3) - I3_3*cos(q2)*cos(q3)*sin(q3) - (L3^2*M3*cos(q2)*cos(q3)*sin(q3))/4 - (L2*L3*M3*cos(q2)*cos(q3))/2, - I3_1*sin(q2) - (L3^2*M3*sin(q2))/4 - (L2*L3*M3*sin(q2)*sin(q3))/2;
                                                                                                                                                                                                              I3_2*cos(q2)*cos(q3)*sin(q3) - I3_3*cos(q2)*cos(q3)*sin(q3) - (L3^2*M3*cos(q2)*cos(q3)*sin(q3))/4 - (L2*L3*M3*cos(q2)*cos(q3))/2,   I2_2 + I3_3 + (L2^2*M2)/4 + L2^2*M3 + (L3^2*M3)/4 + I3_2*cos(q3)^2 - I3_3*cos(q3)^2 - (L3^2*M3*cos(q3)^2)/4 + L2*L3*M3*sin(q3),                                                                   0;
                                                                                                                                                                                                                                                                           - I3_1*sin(q2) - (L3^2*M3*sin(q2))/4 - (L2*L3*M3*sin(q2)*sin(q3))/2,                                                                                                                                0,                                                  (M3*L3^2)/4 + I3_1];
RHS =  [I3_1*dq2*dq3*cos(q2) + I3_2*dq2*dq3*cos(q2) - I3_3*dq2*dq3*cos(q2) - I2_1*dq1*dq2*sin(2*q2) + I2_3*dq1*dq2*sin(2*q2) - I3_1*dq1*dq2*sin(2*q2) + I3_2*dq1*dq2*sin(2*q2) + I3_2*dq2^2*cos(q3)*sin(q2)*sin(q3) - I3_3*dq2^2*cos(q3)*sin(q2)*sin(q3) - (L2^2*M2*dq1*dq2*sin(2*q2))/4 - L2^2*M3*dq1*dq2*sin(2*q2) - (L3^2*M3*dq1*dq2*sin(2*q2))/4 - 2*I3_2*dq2*dq3*cos(q2)*cos(q3)^2 + 2*I3_3*dq2*dq3*cos(q2)*cos(q3)^2 + (L3^2*M3*dq2*dq3*cos(q2)*cos(q3)^2)/2 - 2*I3_2*dq1*dq2*cos(q2)*cos(q3)^2*sin(q2) + 2*I3_3*dq1*dq2*cos(q2)*cos(q3)^2*sin(q2) - 2*I3_2*dq1*dq3*cos(q2)^2*cos(q3)*sin(q3) + 2*I3_3*dq1*dq3*cos(q2)^2*cos(q3)*sin(q3) - (L3^2*M3*dq2^2*cos(q3)*sin(q2)*sin(q3))/4 - (L2*L3*M3*dq2^2*cos(q3)*sin(q2))/2 + (L2*L3*M3*dq3^2*cos(q3)*sin(q2))/2 - L2*L3*M3*dq1*dq3*cos(q3) + (L3^2*M3*dq1*dq2*cos(q2)*cos(q3)^2*sin(q2))/2 + (L3^2*M3*dq1*dq3*cos(q2)^2*cos(q3)*sin(q3))/2 + L2*L3*M3*dq1*dq3*cos(q2)^2*cos(q3) - 2*L2*L3*M3*dq1*dq2*cos(q2)*sin(q2)*sin(q3);
                                                                                                                                                           (I2_1*dq1^2*sin(2*q2))/2 - (I2_3*dq1^2*sin(2*q2))/2 + (I3_1*dq1^2*sin(2*q2))/2 - (I3_2*dq1^2*sin(2*q2))/2 + (L2*M2*g*sin(q2))/2 + L2*M3*g*sin(q2) - I3_1*dq1*dq3*cos(q2) + I3_2*dq1*dq3*cos(q2) - I3_3*dq1*dq3*cos(q2) + (L2^2*M2*dq1^2*sin(2*q2))/8 + (L2^2*M3*dq1^2*sin(2*q2))/2 + (L3^2*M3*dq1^2*sin(2*q2))/8 + I3_2*dq2*dq3*sin(2*q3) - I3_3*dq2*dq3*sin(2*q3) + (L3*M3*g*sin(q2)*sin(q3))/2 + I3_2*dq1^2*cos(q2)*cos(q3)^2*sin(q2) - I3_3*dq1^2*cos(q2)*cos(q3)^2*sin(q2) - (L3^2*M3*dq2*dq3*sin(2*q3))/4 - 2*I3_2*dq1*dq3*cos(q2)*cos(q3)^2 + 2*I3_3*dq1*dq3*cos(q2)*cos(q3)^2 - (L3^2*M3*dq1*dq3*cos(q2))/2 - (L3^2*M3*dq1^2*cos(q2)*cos(q3)^2*sin(q2))/4 + (L3^2*M3*dq1*dq3*cos(q2)*cos(q3)^2)/2 - L2*L3*M3*dq2*dq3*cos(q3) + L2*L3*M3*dq1^2*cos(q2)*sin(q2)*sin(q3) - L2*L3*M3*dq1*dq3*cos(q2)*sin(q3);
                                                                                                                                                                                                                                                                                                                                                (I3_2*dq1^2*sin(2*q3))/4 - (I3_2*dq2^2*sin(2*q3))/2 - (I3_3*dq1^2*sin(2*q3))/4 + (I3_3*dq2^2*sin(2*q3))/2 + I3_1*dq1*dq2*cos(q2) - (L3^2*M3*dq1^2*sin(2*q3))/16 + (L3^2*M3*dq2^2*sin(2*q3))/8 + (I3_2*dq1^2*cos(2*q2)*sin(2*q3))/4 - (I3_3*dq1^2*cos(2*q2)*sin(2*q3))/4 - (L3*M3*g*cos(q2)*cos(q3))/2 + I3_2*dq1*dq2*cos(2*q3)*cos(q2) - I3_3*dq1*dq2*cos(2*q3)*cos(q2) - (L3^2*M3*dq1^2*cos(2*q2)*sin(2*q3))/16 + (L2*L3*M3*dq1^2*cos(q3))/4 + (L2*L3*M3*dq2^2*cos(q3))/2 + (L3^2*M3*dq1*dq2*cos(q2))/4 - (L2*L3*M3*dq1^2*cos(2*q2)*cos(q3))/4 - (L3^2*M3*dq1*dq2*cos(2*q3)*cos(q2))/4 + L2*L3*M3*dq1*dq2*cos(q2)*sin(q3)];
                                                                                                                                                                                                                                                                                                                                            
TAU = M * ddQ - RHS; 
